@model ReservationViewModel
@{
    ViewData["Title"] = "New Reservation";
}

<div class="w-full flex justify-center">
    <h1 class="text-4xl text-center m-4 p-2 border-b w-1/2">Selecione o seu quarto</h1>
</div>

<div class="text-center">

    <div class="row">
        <div class="col-md-12">
            <form id="reservationForm" method="post" asp-action="SaveReservation">
                <div class="flex flex-wrap justify-center">
                    @foreach (var room in Model.AvailableRooms)
                    {
                        <div class="room-card xl:size-96 sm:size-52 md:size-64 lg:size-80 m-4 bg-white rounded-lg shadow-xl max-w-sm relative overflow-hidden transition-transform transform hover:scale-105" data-room-id="@room.Id">
                            <div class="relative">
                                
                                <div class="w-full max-h-60 overflow-hidden">
                                    <img class="object-cover rounded-t-lg block" src="@Url.Action("RenderImage", "Room", new { id = room.Id })" alt="Room image" />
                                </div>
                                <div class="absolute -top-3 left-0 right-0 bottom-0 bg-gradient-to-t from-white via-white/25 via-25% to-transparent rounded-t-lg"></div>
                            </div>
                            <div class="p-4">
                                <h3 class="text-2xl font-bold">@room.RoomType</h3>
                                <p class="text-gray-600">@room.Description</p>
                                <p class="text-gray-800 mt-2" id='rate' value="@room.Rate">@room.Rate.ToString("C") Por Noite</p>
                            </div>
                        </div>
                    }
                </div>

                <input asp-for="PersonID" type="hidden" id="personID" name="PersonID" value="@Model.PersonID" />
                <input asp-for="RoomID" type="hidden" id="selectedRoomId" name="RoomID" value="" />
                <input asp-for="TotalAmount" type="hidden" id="totalAmount" name="TotalAmount" value="" />
                <input asp-for="StartDate" type="hidden" id="startDate" name="StartDate" value="" />
                <input asp-for="EndDate" type="hidden" id="endDate" name="EndDate" value="" />

                <button type="button" id="confirmButton" class="hidden sticky bottom-4 left-0 right-0 mx-auto m-4 w-1/2 bg-blue-500 text-white py-2 rounded-lg text-lg">Confirmar</button>
            </form>
        </div>
    </div>
</div>

<div id="dateModal" class="fixed inset-0 flex items-center justify-center hidden bg-gray-800 bg-opacity-75">
    <div class="bg-white rounded-lg p-6">
        <h2 class="text-2xl mb-4">Select Reservation Dates</h2>
        <div>
            <label for="dateRange" class="block text-lg mb-2">Date Range:</label>
            <input id="dateRange" type="text" class="form-control" />
        </div>
        <div class="mt-4">
            <button type="button" id="saveDatesButton" class="bg-blue-500 text-white py-2 px-4 rounded">Save Dates</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const roomCards = document.querySelectorAll('.room-card');
            const confirmButton = document.getElementById('confirmButton');
            const dateModal = document.getElementById('dateModal');
            const saveDatesButton = document.getElementById('saveDatesButton');
            const dateRangeInput = document.getElementById('dateRange');
            let selectedRoomId;

            // Initialize Flatpickr
            flatpickr(dateRangeInput, {
                mode: "range",
                dateFormat: "Y-m-d"
            });

            roomCards.forEach(card => {
                card.addEventListener('click', function () {
                    roomCards.forEach(c => c.classList.remove('selected')); // Remove selected class from all cards
                    card.classList.add('selected'); // Add selected class to the clicked card
                    selectedRoomId = card.dataset.roomId; // Set selected room ID

                    confirmButton.classList.remove('hidden'); // Show confirm button
                });
            });

            confirmButton.addEventListener('click', function () {
                if (selectedRoomId) {
                    dateModal.classList.remove('hidden'); // Show date modal
                }
            });

            saveDatesButton.addEventListener('click', function () {
                const dates = dateRangeInput._flatpickr.selectedDates;

                if (dates.length === 2) {
                    const startDate = dates[0].toISOString().split('T')[0];
                    const endDate = dates[1].toISOString().split('T')[0];

                    document.getElementById('selectedRoomId').value = selectedRoomId;
                    document.getElementById('startDate').value = startDate;
                    document.getElementById('endDate').value = endDate;

                    document.getElementById('reservationForm').submit();
                } else {
                    alert('Please select a valid date range.');
                }
            });
        });

        const style = document.createElement('style');
        style.innerHTML = `
            .room-card.selected {
                border: 2px solid #007bff;
                transform: scale(1.05);
            }
        `;
        document.head.appendChild(style);
    </script>
}
